---
version: v1alpha1
debug: false
persist: true
machine:
  type: worker
  token: op://Secrets/talos/MACHINE_TOKEN
  ca:
    crt: op://Secrets/talos/MACHINE_CA_CRT
  kubelet:
    image: ghcr.io/siderolabs/kubelet:{{ ENV.KUBERNETES_VERSION }}
    extraConfig:
      featureGates:
        UserNamespacesSupport: true
        UserNamespacesPodSecurityStandards: true
      maxPods: 150
      serializeImagePulls: false
    extraMounts:
      - destination: /var/mnt/extra
        type: bind
        source: /var/mnt/extra
        options: ["bind", "rshared", "rw"]
    defaultRuntimeSeccompProfileEnabled: true
    nodeIP:
      validSubnets: ["192.168.10.0/24"]
    disableManifestsDirectory: true
  network:
    nameservers: ["192.168.10.1"]
    disableSearchDomain: true
  install:
    extraKernelArgs:
      - apparmor=0              # Less security, faster puter
      - init_on_alloc=0         # Less security, faster puter
      - init_on_free=0          # Less security, faster puter
      - iommu=pt                # PCI Passthrough
      - mitigations=off         # Less security, faster puter
      - security=none           # Less security, faster puter
      - talos.auditd.disabled=1 # Less security, faster puter
    image: "factory.talos.dev/installer/ffb0c3521ac24e3d3378c572fa8ec5c38ba93b60404cf06a3291d259dc7c8b10:{{ ENV.TALOS_VERSION }}"
    wipe: false
  files:
    - op: create
      path: /etc/cri/conf.d/20-customization.part
      content: |
        [plugins."io.containerd.cri.v1.images"]
          discard_unpacked_layers = false
        [plugins."io.containerd.cri.v1.runtime"]
          [plugins."io.containerd.cri.v1.runtime".containerd]
            default_runtime_name = "nvidia"
    - op: overwrite
      path: /etc/nfsmount.conf
      permissions: 0o644
      content: |
        [ NFSMount_Global_Options ]
        nfsvers=4.1
        hard=True
        nconnect=16
        noatime=True
  time:
    disabled: false
    servers: ["time.cloudflare.com"]
  sysctls:
    fs.inotify.max_user_instances: 8192    # Watchdog
    fs.inotify.max_user_watches: 1048576   # Watchdog
    net.core.default_qdisc: fq             # 10Gb/s
    net.core.rmem_max: 67108864            # 10Gb/s | Cloudflared / QUIC
    net.core.wmem_max: 67108864            # 10Gb/s | Cloudflared / QUIC
    net.ipv4.tcp_congestion_control: bbr   # 10Gb/s
    net.ipv4.tcp_fastopen: 3               # Send and accept data in the opening SYN packet
    net.ipv4.tcp_mtu_probing: 1            # 10Gb/s | Jumbo frames
    net.ipv4.tcp_rmem: 4096 87380 33554432 # 10Gb/s
    net.ipv4.tcp_wmem: 4096 65536 33554432 # 10Gb/s
    net.ipv4.tcp_window_scaling: 1         # 10Gb/s
    vm.nr_hugepages: 1024                  # PostgreSQL
    user.max_user_namespaces: "11255"      # Steam/Flatpak support
  features:
    rbac: true
    stableHostname: true
    apidCheckExtKeyUsage: true
    diskQuotaSupport: true
    kubePrism:
      enabled: true
      port: 7445
    hostDNS:
      enabled: true
      forwardKubeDNSToHost: false
      resolveMemberNames: true
  kernel:
    modules:
      - name: nbd
  nodeLabels:
    topology.kubernetes.io/region: jupiter
    topology.kubernetes.io/zone: w
cluster:
  id: op://Secrets/talos/CLUSTER_ID
  secret: op://Secrets/talos/CLUSTER_SECRET
  allowSchedulingOnControlPlanes: true
  controlPlane:
    endpoint: https://k8s.internal:6443
  clusterName: jupiter
  network:
    cni:
      name: none
    dnsDomain: cluster.local
    podSubnets: ["10.244.0.0/16"]
    serviceSubnets: ["10.245.0.0/16"]
  coreDNS:
    disabled: true
  discovery:
    enabled: true
    registries:
      kubernetes:
        disabled: true
      service:
        disabled: false
  extraManifests:
    - # renovate: datasource=github-releases depName=kubernetes-sigs/gateway-api
      https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.2.1/experimental-install.yaml
    - # renovate: datasource=github-releases depName=prometheus-operator/prometheus-operator
      https://github.com/prometheus-operator/prometheus-operator/releases/download/v0.82.0/stripped-down-crds.yaml
    {% for crd in ["connectors", "dnsconfigs", "proxyclasses", "proxygroups", "recorders"] %}
    - # renovate: datasource=github-releases depName=tailscale/tailscale
      https://raw.githubusercontent.com/tailscale/tailscale/v1.82.5/cmd/k8s-operator/deploy/crds/tailscale.com_{{ crd }}.yaml
    {% endfor %}
  token: op://Secrets/talos/CLUSTER_TOKEN
  secretboxEncryptionSecret: op://Secrets/talos/CLUSTER_SECRETBOX_ENCRYPTION_SECRET
  ca:
    crt: op://Secrets/talos/CLUSTER_CA_CRT
  aggregatorCA:
    crt: op://Secrets/talos/CLUSTER_AGGREGATOR_CA_CRT
    key: op://Secrets/talos/CLUSTER_AGGREGATOR_CA_KEY
  serviceAccount:
    key: op://Secrets/talos/CLUSTER_SERVICE_ACCOUNT_KEY
  apiServer:
    image: registry.k8s.io/kube-apiserver:{{ ENV.KUBERNETES_VERSION }}
    extraArgs:
      enable-aggregator-routing: true
      feature-gates: UserNamespacesSupport=true,UserNamespacesPodSecurityStandards=true
    certSANs: ["k8s.internal"]
    disablePodSecurityPolicy: true
  controllerManager:
    image: registry.k8s.io/kube-controller-manager:{{ ENV.KUBERNETES_VERSION }}
    extraArgs:
      bind-address: 0.0.0.0
  proxy:
    disabled: true
    image: registry.k8s.io/kube-proxy:{{ ENV.KUBERNETES_VERSION }}
  scheduler:
    image: registry.k8s.io/kube-scheduler:{{ ENV.KUBERNETES_VERSION }}
    extraArgs:
      bind-address: 0.0.0.0
    config:
      apiVersion: kubescheduler.config.k8s.io/v1
      kind: KubeSchedulerConfiguration
      profiles:
        - schedulerName: default-scheduler
          plugins:
            score:
              disabled:
                - name: ImageLocality
          pluginConfig:
            - name: PodTopologySpread
              args:
                defaultingType: List
                defaultConstraints:
                  - maxSkew: 1
                    topologyKey: kubernetes.io/hostname
                    whenUnsatisfiable: ScheduleAnyway
