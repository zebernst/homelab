---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ferretdb
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      ferretdb:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: ferretdb-secret
        containers:
          app:
            image:
              repository: ghcr.io/ferretdb/ferretdb
              tag: 1.24.0@sha256:e4e442895ae2aaf8284db3d012c8d0e1c84d6f353d16678a0d3edf6d7e81d624
            env:
              FERRETDB_HANDLER: pg
              FERRETDB_MODE: normal
              FERRETDB_LISTEN_ADDR: 0.0.0.0:27017
#              FERRETDB_PROXY_ADDR: 10.2.3.138:27017
              FERRETDB_LOG_LEVEL: info
              FERRETDB_LOG_FORMAT: json
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /debug/livez/
                    port: &healthPort 8088
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                <<: *probes
                spec:
                  httpGet:
                    path: /debug/readyz
                    port: *healthPort
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ "ALL" ] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 256Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: ferretdb
        ports:
          mongo:
            enabled: true
            port: 27017
            protocol: TCP
            appProtocol: mongodb
    persistence:
      state:
        type: emptyDir
      tmp:
        type: emptyDir
