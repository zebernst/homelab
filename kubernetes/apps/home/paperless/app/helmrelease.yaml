---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app paperless
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.2
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      paperless:

        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: paperless-secret

        containers:
          paperless:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.14.7
            env:
              # Configure application
              PAPERLESS_URL: "https://{{ .Release.Name }}.zebernst.dev"
              PAPERLESS_CSRF_TRUSTED_ORIGINS: "https://{{ .Release.Name }}.kite-harmonic.ts.net"
              PAPERLESS_CORS_ALLOWED_HOSTS: "https://{{ .Release.Name }}.kite-harmonic.ts.net"
              PAPERLESS_PORT: &port "8000"
              PAPERLESS_TIME_ZONE: "America/New_York"
              PAPERLESS_WEBSERVER_WORKERS: "2"
              PAPERLESS_TASK_WORKERS: "2"
              # Configure Remote User auth
              PAPERLESS_ACCOUNT_ALLOW_SIGNUPS: "false"
              PAPERLESS_SOCIALACCOUNT_ALLOW_SIGNUPS: "false"
              # Configure folders
              PAPERLESS_CONSUMPTION_DIR: /data/nas/incoming
              PAPERLESS_DATA_DIR: /data/local/data
              PAPERLESS_EXPORT_DIR: /data/nas/export
              PAPERLESS_MEDIA_ROOT: /data/local/media
              # Configure folder importer
              PAPERLESS_CONSUMER_POLLING: "60"
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              # Configure OCR
              PAPERLESS_OCR_LANGUAGES: eng
              PAPERLESS_OCR_LANGUAGE: eng
              # Enable TIKA
              PAPERLESS_TIKA_ENABLED: true
              PAPERLESS_TIKA_ENDPOINT: http://127.0.0.1:9998
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://127.0.0.1:3000
              # Enable monitoring
              PAPERLESS_ENABLE_FLOWER: true
              FLOWER_PORT: &metricsPort 5555
              # Configure database
              PAPERLESS_DBENGINE: postgresql
              # Configure redis integration
              PAPERLESS_REDIS: redis://hindwing.database.svc.cluster.local:6379
            envFrom: *envFrom
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 25m
                memory: 2Gi
              limits:
                memory: 6Gi
          tika:
            image:
              repository: docker.io/apache/tika
              tag: 3.1.0.0-full
              pullPolicy: IfNotPresent
            ports:
              - containerPort: 9998
          gotenberg:
            image:
              repository: gotenberg/gotenberg
              tag: 8.18.0
              pullPolicy: IfNotPresent
            ports:
              - containerPort: 3000
            command:
              - "gotenberg"
              - "--chromium-disable-javascript=true"
              - "--chromium-allow-list=file:///tmp/.*"

    defaultPodOptions:
      securityContext:
        runAsNonRoot: false
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: Always
        supplementalGroups: [ 65568 ]

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
          metrics:
            port: *metricsPort

    ingress:
      lan:
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.zebernst.dev"
            paths: &paths
              - path: /
                service:
                  identifier: app
                  port: http
      ts:
        className: tailscale
        hosts:
          - host: &tsHost "{{ .Release.Name }}.kite-harmonic.ts.net"
            paths: *paths
        tls:
          - hosts:
              - *tsHost

    serviceMonitor:
      app:
        serviceName: *app
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s

    persistence:
      data:
        existingClaim: *app
        globalMounts:
          - path: /data/local
      nas:
        type: nfs
        server: nas.internal
        path: /volume1/apps/paperless
        globalMounts:
          - path: /data/nas
