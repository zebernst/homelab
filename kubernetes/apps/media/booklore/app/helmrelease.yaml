---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app booklore
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  maxHistory: 2
  test:
    enable: false
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
      strategy: rollback
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  values:
    controllers:
      *app :
        containers:
          *app :
            image:
              repository: ghcr.io/booklore-app/booklore
              tag: v1.1.2

            env:
              TZ: America/Chicago
              PUID: &puid "1000"
              PGID: &pgid "1000"
              DATABASE_URL: "jdbc:mariadb://mariadb.database.svc.cluster.local:3306/booklore"
              DATABASE_USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: booklore-secret
                    key: DATABASE_USERNAME
              DATABASE_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: booklore-secret
                    key: DATABASE_PASSWORD
              SWAGGER_ENABLED: "false"

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  tcpSocket:
                    port: &port 6060
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *probes

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: *puid
        runAsGroup: *pgid

    service:
      app :
        controller: *app
        ports:
          http:
            port: *port

    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.zebernst.dev"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https

    persistence:
      config:
        existingClaim: *app
        globalMounts:
          - path: /home/booklore/data

      media:
        type: nfs
        server: nas.internal
        path: /volume1/media
        globalMounts:
          - path: /home/booklore/books
            subPath: books
          - path: /home/booklore/bookdrop/openbooks
            subPath: downloads/openbooks
