---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
    - name: synology-csi-driver
      namespace: kube-system
    - name: volsync
      namespace: volsync-system
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.41.3.9314-a0bfb8370@sha256:38fcbef239341db591f8ff87f20777d9a783b79f757fc42e360041d7ba78eada
            env:
              TZ: America/New_York
              PLEX_ADVERTISE_URL: https://plex.zebernst.dev:443,http://10.2.100.10:32400,http://plex.kite-harmonic.ts.net:32400
              PLEX_NO_AUTH_NETWORKS: 10.0.0.0/8
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: 1
#                memory: 12Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: ${APP_UID:-1024}
        runAsGroup: ${APP_GID:-100}
        fsGroup: ${APP_GID:-100}
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
    service:
      app:
        controller: plex
        nameOverride: plex
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: 10.2.100.10
        ports:
          http:
            port: 32400
      ts:
        controller: plex
        type: LoadBalancer
        loadBalancerClass: tailscale
        annotations:
          tailscale.com/hostname: plex
        ports:
          http:
            port: 32400
    ingress:
      external:
        annotations:
          external-dns.alpha.kubernetes.io/target: external.zebernst.dev
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            # App root redirect: If a request to / comes in -> 302 redirect to the plex landing page
            # (but only if it doesn't contain the X-Plex-Device-Name header or query argument)
            # This retains API endpoint access for official Plex clients and authenticated sessions.
            set $r "";
            if ($http_x_plex_device_name = '') { set $r "Y"; }         # for web and tv clients (header)
            if ($arg_X-Plex-Device-Name = '')  { set $r "$${r}Y"; }    # for iOS clients (query argument)
            if ($r = YY) {
              rewrite ^/$ https://$http_host/web/index.html;
            }

            gzip on;
            gzip_vary on;
            gzip_min_length 256;
            gzip_proxied any;
            gzip_comp_level 9;
            gzip_disable "MSIE [1-6]\.";
            gzip_types
                text/css
                text/xml
                text/plain
                text/javascript
                text/cache-manifest
                text/x-cross-domain-policy
                application/javascript
                application/x-javascript
                application/json
                application/manifest+json
                application/xml
                application/xml+rss
                application/xhtml+xml
                application/rss+xml
                application/rdf+xml
                application/atom+xml
                application/atom_xml
                application/geo+json
                application/ttf
                application/x-ttf
                application/x-font-ttf
                application/x-font-otf
                application/x-font-truetype
                application/x-font-opentype
                application/x-web-app-manifest+json
                application/vnd.ms-fontobject
                font/eot
                font/otf
                font/ttf
                font/opentype
                image/svg+xml
                image/x-icon
                image/bmp;

            send_timeout 3600; # some players don't reopen a socket and playback stops totally instead of resuming after an extended pause (e.g. Chrome)

            proxy_set_header Sec-Websocket-Extensions $http_sec_websocket_extensions;
            proxy_set_header Sec-Websocket-Key $http_sec_websocket_key;
            proxy_set_header Sec-Websocket-Protocol $http_sec_websocket_protocol;
            proxy_set_header Sec-Websocket-Version $http_sec_websocket_version;

            proxy_set_header Accept-Encoding "";

            add_header Referrer-Policy "same-origin" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-Frame-Options sameorigin;
            add_header X-XSS-Protection "1; mode=block" always;
        className: external
        hosts:
          - host: "{{ .Release.Name }}.zebernst.dev"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: plex
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server
      cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
            subPath: Cache
          - path: /config/Library/Application Support/Plex Media Server/Media
            subPath: Media
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs
      media:
        type: nfs
        server: nas.lab.home.arpa
        path: /volume1/media
        globalMounts:
          - path: /media/tv
            subPath: tv
            readOnly: true
          - path: /media/tv-uhd
            subPath: tv-uhd
            readOnly: true
          - path: /media/movies
            subPath: movies
            readOnly: true
          - path: /media/movies-uhd
            subPath: movies-uhd
            readOnly: true
          - path: /media/plex/posters
            subPath: posters
            readOnly: true
      optimized:
        existingClaim: plex-optimized-media
        globalMounts:
          - path: /media/plex/optimized
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
        medium: Memory
