---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app qbittorrent
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: volsync
      namespace: volsync-system
  values:
    controllers:
      qbittorrent:
        annotations:
          configmap.reloader.stakater.com/reload: qbittorrent-scripts
          secret.reloader.stakater.com/reload: qbittorrent-secret,gluetun-secret
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/qbittorrent-beta
              tag: 5.0.3@sha256:4b9de3356475bd97fda3fb4d98f213e8d139aef15e7bd20dab72973e661901dd
            env:
              TZ: America/New_York
              QBT_WEBUI_PORT: &port 80
              QBT_TORRENTING_PORT: &bittorrentPort 61267
              CROSS_SEED_ENABLED: true
              CROSS_SEED_HOST: cross-seed.downloads.svc.cluster.local
              CROSS_SEED_PORT: 80
              CROSS_SEED_SLEEP_INTERVAL: 0
              PUSHOVER_ENABLED: true
            envFrom:
              - secretRef:
                  name: qbittorrent-secret
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /api/v2/app/version
                    port: *port
                  initialDelaySeconds: 5
                  periodSeconds: 30
                  timeoutSeconds: 10
                  failureThreshold: 6
              readiness: *probes
              startup:
                enabled: true
                spec:
                  tcpSocket:
                    port: *port
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              runAsNonRoot: true
              runAsUser: 1024
              runAsGroup: 100
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ "ALL" ] }
            resources:
              requests:
                cpu: 100m
#              limits:
#                memory: 8Gi
        initContainers:
          gluetun:
            restartPolicy: Always
            image:
              repository: ghcr.io/qdm12/gluetun
              tag: v3.39.1
            env:
              VPN_TYPE: wireguard
              VPN_INTERFACE: wg0
              DNS_KEEP_NAMESERVER: on
              FIREWALL_INPUT_PORTS: *port
              FIREWALL_VPN_INPUT_PORTS: *bittorrentPort
              FIREWALL_OUTBOUND_SUBNETS: 10.69.0.0/16,10.96.0.0/16  # k8s subnet access
            envFrom:
              - secretRef:
                  name: gluetun-secret
            securityContext:
              runAsNonRoot: false
              runAsUser: 0
              runAsGroup: 0
              capabilities:
                add: [ NET_ADMIN ]
            resources:
              limits:
                squat.ai/tun: "1"
            probes:
              liveness: &vpn-probes
                enabled: true
                custom: true
                spec:
                  exec:
                    command:
                      - /gluetun-entrypoint
                      - healthcheck
                  initialDelaySeconds: 20
                  periodSeconds: 5
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *vpn-probes
    defaultPodOptions:
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [ 10000 ]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        nameOverride: *app
        controller: *app
        ports:
          http:
            port: *port
            primary: true
#      bittorrent:
#        controller: *app
#        type: LoadBalancer
#        annotations:
#          lbipam.cilium.io/ips: 10.2.100.21
#        externalTrafficPolicy: Local
#        ports:
#          bittorrent-tcp:
#            port: *bittorrentPort
#            protocol: TCP
#          bittorrent-udp:
#            port: *bittorrentPort
#            protocol: UDP
#      gluetun:
#        controller: *app
#        ports:
#          http:
#            port: 80
#            targetPort: 8000
#            protocol: HTTP
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.zebernst.dev
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.zebernst.dev"
            paths: &paths
              - path: /
                service:
                  identifier: app
                  port: http
          - host: &customHost qb.zebernst.dev
            paths: *paths
        tls:
          - hosts:
              - *host
              - *customHost
    persistence:
      config:
        existingClaim: qbittorrent
        advancedMounts:
          qbittorrent:
            app:
              - path: /config
      config-empty:
        type: emptyDir
        advancedMounts:
          qbittorrent:
            port-forward:
              - path: /config
      scripts:
        type: configMap
        name: qbittorrent-scripts
        defaultMode: 0775
        advancedMounts:
          qbittorrent:
            app:
              - path: /scripts
      downloads:
        type: nfs
        server: nas.lab.home.arpa
        path: /volume1/media
        advancedMounts:
          qbittorrent:
            app:
              - path: /media/downloads/qbittorrent
                subPath: downloads/qbittorrent
