---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: cross-seed
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: qbittorrent
      namespace: downloads
  values:
    controllers:
      daemon:

        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app: &container
            image:
              repository: ghcr.io/cross-seed/cross-seed
              tag: 6.5.2@sha256:d0a9e80d026e37806960ac3551e97b7cf75ae16470dbbf1df217a7aec86cf9c5
            env:
              CROSS_SEED_PORT: &port 80
              TZ: America/New_York
            envFrom:
              - secretRef:
                  name: cross-seed-secret
            args: [ "daemon" ]
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes

            securityContext: &secctx
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ "ALL" ] }

            resources: &resources
              requests:
                cpu: 10m
              limits:
                memory: 256Mi

      search:
        type: cronjob
        cronjob:
          schedule: "0 0 1 */3 *"  # quarterly
          timeZone: America/New_York
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1

        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            <<: *container
            args: [ "search" ]
            probes:
              liveness:
                enabled: false
              readiness:
                enabled: false
            resources: *resources
            securityContext: *secctx

    defaultPodOptions:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - qbittorrent
              topologyKey: kubernetes.io/hostname
      securityContext:
        runAsNonRoot: true
        runAsUser: ${APP_UID:-1024}
        runAsGroup: ${APP_GID:-100}
        fsGroup: ${APP_GID:-100}
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: daemon
        ports:
          http:
            port: *port

    persistence:
      state:
        type: persistentVolumeClaim
        size: 5Gi
        storageClass: iscsi
        accessMode: ReadWriteMany
        globalMounts:
          - path: /config
      config-daemon:
        type: configMap
        name: cross-seed-configmap
        advancedMounts:
          daemon:
            app:
              - path: /config/config.js
                subPath: config.js
                readOnly: true
        items:
          - key: config-daemon.js
            path: config.js
      config-search:
        type: configMap
        name: cross-seed-configmap
        advancedMounts:
          search:
            app:
              - path: /config/config.js
                subPath: config.js
                readOnly: true
        items:
          - key: config-search.js
            path: config.js
      qbittorrent:
        existingClaim: qbittorrent
        globalMounts:
          - path: /qbittorrent/qBittorrent/BT_backup
            subPath: qBittorrent/BT_backup
            readOnly: true
      media:
        type: nfs
        server: nas.lab.home.arpa
        path: /volume1/media
        globalMounts:
          - path: /media
      tmp:
        type: emptyDir
